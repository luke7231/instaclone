// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  firstName  String
  lastName   String?
  userName   String     @unique
  email      String     @unique
  password   String
  bio        String?
  avatar     String?
  photos     Photo[]
  followers  User[]     @relation("FollowRelation", references: [id])
  followings User[]     @relation("FollowRelation", references: [id])
  createAt   DateTime   @default(now())
  updateAt   DateTime   @updatedAt
  likes      Like[]
  comments   comments[]
  room       Room[]
  roomId     Int?
  message    message[]
}

model Photo {
  id       Int        @id @default(autoincrement())
  user     User       @relation(fields: [userId], references: [id])
  userId   Int
  file     String
  caption  String?
  hashtags Hashtag[]
  likes    Like[]
  comments comments[]
  createAt DateTime   @default(now())
  updateAt DateTime   @updatedAt
}

model Hashtag {
  id       Int      @id @default(autoincrement())
  hashtag  String   @unique
  photos   Photo[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Like {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  photo    Photo    @relation(fields: [photoId], references: [id])
  userId   Int
  photoId  Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@unique([userId, photoId])
}

model comments {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  photo    Photo    @relation(fields: [photoId], references: [id])
  payload  String
  userId   Int
  photoId  Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Room {
  id       Int       @id @default(autoincrement())
  users    User[]
  messages message[]
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
}

model message {
  id       Int      @id @default(autoincrement())
  payload  String
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  room     Room     @relation(fields: [roomId], references: [id])
  roomId   Int
  read     Boolean  @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
